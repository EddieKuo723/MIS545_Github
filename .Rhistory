while ( countPrime <= inputReq ){
for( i in 2:10000){
if(isPrime((i)) == TRUE){
countPrime <- countPrime + 1
ans <- i
}
}
}
countPrime = 0
ans <- 0
inputReq = readline("Enter the nth prime number")
countPrime = 0
ans <- 0
while ( countPrime <= inputReq ){
for( i in 2:10000){
if(isPrime((i)) == TRUE){
countPrime <- countPrime + 1
ans <- i
}
}
}
while ( countPrime <= inputReq ){
for( i in 2:10000){
if(isPrime((i)) == TRUE){
countPrime <- countPrime + 1
ans <- i
}
}
}
print(ans)
for(i in 2:10000){
if(isPrime((i)) == TRUE){
countPrime <- countPrime +1
if(countPrime == inputReq){
break
}
}
}
ans <- 0
for(i in 2:10000){
if(isPrime((i)) == TRUE){
countPrime <- countPrime +1
if(countPrime == inputReq){
ans <- i
break
}
}
}
print(ans)
for(i in 2:10000){
if(isPrime((i)) == TRUE){
countPrime <- countPrime +1
if(countPrime == inputReq){
ans <- i
break
}
}
}
inputReq = 5
countPrime = 0
for(i in 2:10000){
if(isPrime((i)) == TRUE){
countPrime <- countPrime +1
if(countPrime == inputReq){
ans <- i
break
}
}
}
print(ans)
inputReq = readline("Enter the nth prime number")
inputReq = strtoi(readline("Enter the nth prime number"))
countPrime = 0
for(i in 2:10000){
if(isPrime((i)) == TRUE){
countPrime <- countPrime +1
if(countPrime == inputReq){
ans <- i
break
}
}
}
print(ans)
source('~/.active-rstudio-document', echo=TRUE)
inputReq = strtoi(readline("Enter the nth prime number"))
print(inputReq)
countPrime = 0
for(i in 2:10000){
if(isPrime((i)) == TRUE){
countPrime <- countPrime +1
if(countPrime == inputReq){
ans <- i
break
}
}
}
print(ans)
current = 2
while(countPrime <= inputReq){
if(isPrime(current) == TRUE){
current <- current +1
countPrime <- countPrime +1
ans = current
}
}
inputReq = strtoi(readline("Enter the nth prime number"))
countPrime = 0
current = 2
while(countPrime <= inputReq){
if(isPrime(current) == TRUE){
current <- current +1
countPrime <- countPrime +1
ans = current
}
}
inputReq = strtoi(readline("Enter the nth prime number"))
print(inputReq)
countPrime = 0
current = 2
while(countPrime <= inputReq){
if(isPrime(current) == TRUE){
countPrime <- countPrime +1
ans = current
}
current <- current +1
}
print(ans)
inputReq = strtoi(readline("Enter the nth prime number"))
countPrime = 0
current = 2
while(countPrime <= inputReq){
if(isPrime(current) == TRUE){
countPrime <- countPrime +1
ans = current
}
current <- current +1
}
print(ans)
inputReq = strtoi(readline("Enter the nth prime number"))
countPrime = 0
current = 2
while(countPrime < inputReq){
if(isPrime(current) == TRUE){
countPrime <- countPrime +1
ans = current
}
current <- current +1
}
print(ans)
inputReq = strtoi(readline("Enter the nth prime number"))
countPrime = 0
current = 2
while(countPrime < inputReq){
if(isPrime(current) == TRUE){
countPrime <- countPrime +1
ans = current
}
current <- current +1
}
print(ans)
inputReq = strtoi(readline("Enter the nth prime number"))
countPrime = 0
current = 2
while(countPrime < inputReq){
if(isPrime(current) == TRUE){
countPrime <- countPrime +1
ans = current
}
current <- current +1
}
print(ans)
inputReq = strtoi(readline("Enter the nth prime number"))
countPrime = 0
current = 2
while(countPrime < inputReq){
if(isPrime(current) == TRUE){
countPrime <- countPrime +1
ans = current
}
current <- current +1
}
print(ans)
isPrime <- function(number){
count = 0;
for(i in 1:sqrt(number)){
if(number %% i == 0){
count <- count + 1
}
}
if(count == 2){
return(TRUE)
} else {
return(FALSE)
}
}
inputReq = strtoi(readline("Enter the nth prime number"))
countPrime = 0
current = 2
while(countPrime < inputReq){
if(isPrime(current) == TRUE){
countPrime <- countPrime +1
ans = current
}
current <- current +1
}
print(ans)
isPrime <- function(number){
count = 0;
for(i in 1:number){
if(number %% i == 0){
count <- count + 1
}
}
if(count == 2){
return(TRUE)
} else {
return(FALSE)
}
}
inputReq = strtoi(readline("Enter the nth prime number"))
print(inputReq)
countPrime = 0
current = 2
while(countPrime < inputReq){
if(isPrime(current) == TRUE){
countPrime <- countPrime +1
ans = current
}
current <- current +1
}
print(ans)
inputReq = strtoi(readline("Enter the nth prime number"))
print(inputReq)
countPrime = 0
current = 2
while(countPrime < inputReq){
if(isPrime(current) == TRUE){
countPrime <- countPrime +1
ans = current
}
current <- current +1
}
print(ans)
displayTitle()
print("_________________________")
displayTitle <- func{
print("Lab 02 - Product Lookup")
print("Programmer: Rahul Shakya")
print("_________________________")
}
displayTitle <- func(){
print("Lab 02 - Product Lookup")
print("Programmer: Rahul Shakya")
print("_________________________")
}
displayTitle <- func(){
print("Lab 02 - Product Lookup")
print("Programmer: Rahul Shakya")
print("_________________________")
}
displayTitle()
displayTitle <- func(){
print("Lab 02 - Product Lookup")
print("Programmer: Rahul Shakya")
print("_________________________")
}
print("Programmer: Rahul Shakya")
print("_________________________")
print("Lab 02 - Product Lookup")
displayTitle <- func(){
print("Lab 02 - Product Lookup")
print("Programmer: Rahul Shakya")
print("_________________________")
}
displayTitle <- func(asdsa){
print("Lab 02 - Product Lookup")
print("Programmer: Rahul Shakya")
print("_________________________")
}
}
displayTitle <- func(){
print("Lab 02 - Product Lookup")
print("Programmer: Rahul Shakya")
print("_________________________")
}
displayTitle <- func(){
print("Lab 02 - Product Lookup")
print("Programmer: Rahul Shakya")
print("_________________________")
}
displayTitle <- func(){
print("Lab 02 - Product Lookup")
print("Programmer: Rahul Shakya")
print("_________________________")
}
displayTitle <- function(){
print("Lab 02 - Product Lookup")
print("Programmer: Rahul Shakya")
print("_________________________")
}
displayTitle <- function(){
print("Lab 02 - Product Lookup")
print("Programmer: Rahul Shakya")
print("_________________________")
}
lookupPrice <- function(itemIDParameter){
itemIDVector <- c('AY4', 'TE3', 'TE4', 'GH6', 'QZ4')
itemPriceVector <- c(189.99, 131.99, 56.99, 245.99, 28.99)
itemPriceLookup <- 0
for(currentIDVector in 1:length(itemIDVector)){
if(itemIDVector[currentIDVector] == itemIDParameter){
itemPriceLookup = itemIDVector[currentIDVector]
}
}
}
lookupPrice <- function(itemIDParameter){
itemIDVector <- c('AY4', 'TE3', 'TE4', 'GH6', 'QZ4')
itemPriceVector <- c(189.99, 131.99, 56.99, 245.99, 28.99)
itemPriceLookup <- 0
for(currentIDVector in 1:length(itemIDVector)){
if(itemIDVector[currentIDVector] == itemIDParameter){
itemPriceLookup = itemIDVector[currentIDVector]
}
}
return itemPriceLookup
}
lookupPrice <- function(itemIDParameter){
itemIDVector <- c('AY4', 'TE3', 'TE4', 'GH6', 'QZ4')
itemPriceVector <- c(189.99, 131.99, 56.99, 245.99, 28.99)
itemPriceLookup <- 0
for(currentIDVector in 1:length(itemIDVector)){
if(itemIDVector[currentIDVector] == itemIDParameter){
itemPriceLookup = itemIDVector[currentIDVector]
}
}
return(itemPriceLookup)
}
print(lookupPrice('TE4'))
print(lookupPrice('T4'))
lookupPrice <- function(itemIDParameter){
itemIDVector <- c('AY4', 'TE3', 'TE4', 'GH6', 'QZ4')
itemPriceVector <- c(189.99, 131.99, 56.99, 245.99, 28.99)
itemPriceLookup <- 0
for(currentIDVector in 1:length(itemIDVector)){
if(itemIDVector[currentIDVector] == itemIDParameter){
break
}
}
itemPriceLookup = itemPriceVector[currentIDVector]
}
print(lookupPrice('T4'))
print(lookupPrice('TE4'))
print(lookupPrice('AY4'))
lookupPrice <- function(itemIDParameter){
itemIDVector <- c('AY4', 'TE3', 'TE4', 'GH6', 'QZ4')
itemPriceVector <- c(189.99, 131.99, 56.99, 245.99, 28.99)
itemPriceLookup <- 0
for(currentIDVector in 1:length(itemIDVector)){
if(itemIDVector[currentIDVector] == itemIDParameter){
itemPriceLookup = itemPriceVector[currentIDVector]
break
}
}
}
print(lookupPrice('AY4'))
lookupPrice <- function(itemIDParameter){
itemIDVector <- c('AY4', 'TE3', 'TE4', 'GH6', 'QZ4')
itemPriceVector <- c(189.99, 131.99, 56.99, 245.99, 28.99)
itemPriceLookup <- 0
for(currentIDVector in 1:length(itemIDVector)){
if(itemIDVector[currentIDVector] == itemIDParameter){
itemPriceLookup = itemPriceVector[currentIDVector]
break
}
}
return itemPriceLookup
}
lookupPrice <- function(itemIDParameter){
itemIDVector <- c('AY4', 'TE3', 'TE4', 'GH6', 'QZ4')
itemPriceVector <- c(189.99, 131.99, 56.99, 245.99, 28.99)
itemPriceLookup <- 0
for(currentIDVector in 1:length(itemIDVector)){
if(itemIDVector[currentIDVector] == itemIDParameter){
itemPriceLookup = itemPriceVector[currentIDVector]
break
}
}
return(itemPriceLookup)
}
print(lookupPrice('AY4'))
print(lookupPrice('A4'))
print(lookupPrice('QZ4'))
print(lookupPrice('Q1234'))
displayTitle()
#Ask for the prompt from the user
itemID = readline("Enter the itemID")
itemPrice = lookupPrice(itemID)
print(itemPrice)
#Ask for the prompt from the user
itemID = readline("Enter the itemID")
itemPrice = lookupPrice(itemID)
print(itemPrice)
#Ask for the prompt from the user
itemID = readline("Enter the itemID")
itemPrice = lookupPrice(itemID)
print(itemPrice)
while(loopControl == 'Y'){
print('Valid item IDs are: AY4, TE3, TE4, GH6 and QZ4')
#Ask for the prompt from the user
itemID = readline("Enter the itemID")
itemPrice = lookupPrice(itemID)
if(itemPrice > 0){
print(paste0("The unit price is ",itemPrice))
}
}
# Initialize variable for loopControl
loopControl = 'Y'
while(loopControl == 'Y'){
print('Valid item IDs are: AY4, TE3, TE4, GH6 and QZ4')
#Ask for the prompt from the user
itemID = readline("Enter the itemID")
itemPrice = lookupPrice(itemID)
if(itemPrice > 0){
print(paste0("The unit price is ",itemPrice))
}
}
while(loopControl == 'Y'){
print('Valid item IDs are: AY4, TE3, TE4, GH6 and QZ4')
#Ask for the prompt from the user
itemID = readline("Enter the itemID")
itemPrice = lookupPrice(itemID)
if(itemPrice > 0){
print(paste0("The unit price is $",itemPrice))
quantity = strtoi(readline("Please enter the number of units desired: "))
extendedPrice = itemPrice * quantity
print("The extended price is ", extendedPrice)
} else {
print("Invalid unit ID -- please try again.")
}
loopControl = readline("Would you like to enter another product (Y or N)? ")
}
source('~/Lab02ShakyaR.R', echo=TRUE)
source('~/Lab02ShakyaR.R', echo=TRUE)
source('~/Lab02ShakyaR.R', echo=TRUE)
source('~/Lab02ShakyaR.R')
source('~/Lab02ShakyaR.R')
source('~/Lab02ShakyaR.R')
source('~/Lab02ShakyaR.R')
source('~/Lab02ShakyaR.R')
source('~/Lab02ShakyaR.R')
source('~/Lab02ShakyaR.R')
source('~/Lab02ShakyaR.R')
source('~/Lab02ShakyaR.R')
source('~/Lab02ShakyaR.R')
source('~/Lab02ShakyaR.R')
# Install the tidyverse package and dummies package. The command has been
# commented so that it
# doesnt get executed again and again
# install.packages("tidyverse")
# install.packages("corrplot")
install.packages("olsrr")
install.packages("olsrr")
# Install the tidyverse package and dummies package. The command has been
# commented so that it
# doesnt get executed again and again
# install.packages("tidyverse")
# install.packages("corrplot")
install.packages("olsrr")
# Install the tidyverse package and dummies package. The command has been
# commented so that it
# doesnt get executed again and again
# install.packages("tidyverse")
# install.packages("corrplot")
# install.packages("olsrr")
install.packages("olsrr", dependencies = c("rio", "car"))
# Install the tidyverse package and dummies package. The command has been
# commented so that it
# doesnt get executed again and again
# install.packages("tidyverse")
# install.packages("corrplot")
# install.packages("olsrr")
install.packages("foreign")
# Install the tidyverse package and dummies package. The command has been
# commented so that it
# doesnt get executed again and again
# install.packages("tidyverse")
# install.packages("corrplot")
# install.packages("olsrr")
install.packages("rio")
# Install the tidyverse package and dummies package. The command has been
# commented so that it
# doesnt get executed again and again
# install.packages("tidyverse")
# install.packages("corrplot")
# install.packages("olsrr")
install.packages("https://cran.r-project.org/src/contrib/Archive/foreign/foreign_0.8-76.tar.gz")
# Install the tidyverse package and dummies package. The command has been
# commented so that it
# doesnt get executed again and again
# install.packages("tidyverse")
# install.packages("corrplot")
install.packages("olsrr")
setwd("C:/Users/Rahul/Desktop/MIS545_Github_CyberSecurity")
# Load the tidyverse and neuralnet libraries
library("tidyverse")
# Read Github_most_stars.csv into a tibble called githubStar
githubStar <- read_csv(file="Github_most_stars.csv",
col_types = "cccnnnnnncc",
col_names = TRUE)
# Display githubStar in the console
print(githubStar)
View(githubStar)
